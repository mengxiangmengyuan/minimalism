<template lang="wxml">
  <form bindsubmit="formSubmit" report-submit="true">
    <view class="container">
      <view class="column money">
        <text class="fs20">{{ statement.record_type }}</text>
        <!-- <input class="money-input {{ statement.type }}" placeholder="0.00" placeholder-class="{{ statement.type }}" bindinput="handleAmountInput" name="amount" type="digit"   value="{{ statement.amount }}"/> --> <!-- focus="{{ focus }}" -->

        <text class="money-input" bindinput="handleAmountInput" >{{ statement.amount }}</text>
      </view>

      <view class="column-category" > 
        <view wx:if="{{statement.category_id==2}}">
        <text @tap="chooseCategory({{ 2 }})" class="selected-category" >吃喝</text>
        </view>
        <view wx:else>
                <text @tap="chooseCategory({{ 2 }})" class="text-category">吃喝</text>
        </view>

        <view wx:if="{{statement.category_id==1}}">
                <text @tap="chooseCategory({{ 1 }})" class="selected-category" >购物</text>
        </view>
        <view wx:else>
                <text @tap="chooseCategory({{ 1 }})" class="text-category">购物</text>
        </view>

        <view wx:if="{{statement.category_id==3}}">
                <text @tap="chooseCategory({{ 3 }})" class="selected-category" >买菜</text>
        </view>
        <view wx:else>
                <text @tap="chooseCategory({{ 3 }})" class="text-category">买菜</text>
        </view>

      </view>
      <view class="column" > 

        <view wx:if="{{statement.category_id==4}}">
        <text @tap="chooseCategory({{ 4 }})" class="selected-category" >交通</text>
        </view>
        <view wx:else>
                <text @tap="chooseCategory({{ 4 }})" class="text-category" >交通</text>
        </view>

        <view wx:if="{{statement.category_id==5}}">
                <text @tap="chooseCategory({{ 5 }})" class="selected-category" >娱乐</text>
        </view>
        <view wx:else>
                <text @tap="chooseCategory({{ 5 }})" class="text-category" >娱乐</text>
        </view>

        <view wx:if="{{statement.category_id==6}}">
                <text @tap="chooseCategory({{ 6 }})" class="selected-category" >其他</text>
        </view>
        <view wx:else>
                <text @tap="chooseCategory({{ 6 }})" class="text-category" >其他</text>
        </view>
        
      </view>

     <!--  <view class="frequent-use" wx:if="{{ categories_labels.length > 0 }}">
        <text>猜你想用：</text>
        <text class="label" wx:for="{{ categories_labels }}" @tap="setCategory({{item}})">{{ item.name }}</text>
      </view>

      <view class="column" @tap="redirectChoseAsset">
        <text>账户</text>
        <text class="align-right">{{ statement.asset_name }}</text>
        <input hidden name="asset_id" value="{{ statement.asset_id }}"/>
      </view>

      <view class="frequent-use" wx:if="{{ assets_labels.length > 0 }}">
        <text>猜你想用：</text>
        <text class="label" wx:for="{{ assets_labels }}" @tap="setAsset({{ item }})">{{ item.name }}</text>
      </view> -->
      
      <!-- <view class="column">
        <text>日期</text>
        <picker mode="date" start="2017-01-01" bindchange="dateChange">
          <text>{{ statement.date }}</text>
        </picker>
        <input hidden name="date" value="{{ statement.date }}"/>
        <input hidden name="time" value="{{ statement.time }}"/>
      </view>

      <view class="frequent-use">
        <text>快速选择：</text>
        <text class="label" @tap="quickSetDate('-2')">前天</text>
        <text class="label" @tap="quickSetDate('-1')">昨天</text>
        <text class="label" @tap="quickSetDate('0')">今天</text>
      </view>  -->
      
      <view class="column">
        <text>备注</text>
        <input class="remark" type="text" name="description" bindinput="handleDescInput" value="{{ statement.notes }}" placeholder="本笔账单的简单说明"/>
      </view>
 
      <view class='keyboard'>
        <view class='left number'>
            <view data-key="1" hover-class='active' hover-stay-time='100' bindtap='inputPassword'>1</view>
            <view data-key="2" hover-class='active' hover-stay-time='100' bindtap='inputPassword'>2</view>
            <view data-key="3" hover-class='active' hover-stay-time='100' bindtap='inputPassword'>3</view>
            <view data-key="4" hover-class='active' hover-stay-time='100' bindtap='inputPassword'>4</view>
            <view data-key="5" hover-class='active' hover-stay-time='100' bindtap='inputPassword'>5</view>
            <view data-key="6" hover-class='active' hover-stay-time='100' bindtap='inputPassword'>6</view>
            <view data-key="7" hover-class='active' hover-stay-time='100' bindtap='inputPassword'>7</view>
            <view data-key="8" hover-class='active' hover-stay-time='100' bindtap='inputPassword'>8</view>
            <view data-key="9" hover-class='active' hover-stay-time='100' bindtap='inputPassword'>9</view>
            <view data-key="." hover-class='active' hover-stay-time='100' bindtap='clean'>清空</view>
            <view data-key="." hover-class='active' hover-stay-time='100' bindtap='inputPassword'>.</view>
            <view data-key="0" hover-class='active' hover-stay-time='100' bindtap='inputPassword'>0</view>
        </view>
         <view class='right ctr-btn'>
            <view class='ctr-btn-item' hover-class='active' hover-stay-time='100' bindtap='deleteLast'>删除</view>
            <view class='ctr-btn-item-save' hover-class='active' hover-stay-time='100' >
                   <button class='ctr-btn-item-save' wx:if="{{ !submiting }}" formType="submit">保存</button>
                    <button wx:else>保存中...</button>
            </view>
        </view>  
    </view> 


    </view>
  </form>
</template>

<script>
import wepy from 'wepy'
import wxRequest from '@/utils/wxRequest'
import { mapKey } from '@/utils/host'
import Session from '@/utils/session'
import tip from '@/utils/tip'
import Util from '@/utils/util.js'
import QQMapWX from '@/utils/qqmap-wx-jssdk.js'

export default class StatementFormComponent extends wepy.component {
  props = {
    statement: {
      type: Object,
      default () {
        return {
          id: 0,
          type: 'expend',
          category_id: 2,
          asset_id: 0,
          amount: 0,
          description: '',
          notes: '',
          date: '',
          address: '',
          time: '',
          record_type: '吃喝',
          asset_name: '请选择账户',
          upload_files: []
        }
      }
    },
    submiting: {
      type: Boolean,
      default: false
    },
    type: String
  }

  data = {
    focus: true,
    nation: '',
    province: '',
    city: '',
    district: '',
    street: '',
    assets_labels: [],
    categories_labels: [],
    switchCheck: Session.get('getLocationSwitch') || false,
  }

  events = {
      'htmlParser-broadcast': ($event, ...args) => {
          // console.log('----broadcastb---')
         this.submiting = false
         this.$apply()
      },

  }

  onLoad (options) {
    this.statement.type = this.type
    if (this.statement.id === 0) {
      this.initTodayDate()
      // if (this.switchCheck) this.setLocation()
    }
  }


  initTodayDate () {
    const myDate = new Date()
    let year = myDate.getFullYear()
    let month = myDate.getMonth() + 1
    let day = myDate.getDate()
    if (month < 10) month = `0${month}`
    if (day < 10) day = `0${day}`
    this.statement.date = [year, month, day].join('-')
    this.statement.time = Util.getCurrentTime()
  }

  async guessCategory () {
    const data = await wxRequest.Get('statements/category_frequent', { type: this.statement.type })
    this.categories_labels = data
    this.$apply()
  }

  async guessAsset () {
    const data = await wxRequest.Get('statements/asset_frequent', { type: this.statement.type })
    this.assets_labels = data
    this.$apply()
  }

  setLocation () {
    this.qqmapSDK = new QQMapWX({
      key: mapKey
    });
    wx.getLocation({
      type: 'gcj02', //返回可以用于wx.openLocation的经纬度
      success: (result) => {
        this.qqmapSDK.reverseGeocoder({
          location: {
            latitude: result.latitude,
            longitude: result.longitude
          },
          success: (addressRes) => {
            const address_component = addressRes.result.address_component
            this.nation = address_component.nation
            this.province = address_component.province
            this.city = address_component.city
            this.district = address_component.district
            this.street = address_component.street
            this.statement.address = addressRes.result.address
            this.$apply()
          }
        })
      }
    })
  }

  methods = {
    inputPassword (e) {
      let key=e.currentTarget.dataset.key
      let a = this.statement.amount
      if((a.length == 1 || a.length == undefined) && a==0){
        a = key
      } else {
        a = a + key
      }
      this.statement.amount = a
      this.$apply()
    },
    clean () {
      this.statement.amount = 0
      this.$apply()
    },
    deleteLast () {
      var amount = this.statement.amount
      if (amount.length == 0 || amount.length == undefined) {
        return
      } 
      amount = amount.substr(0,amount.length-1)
      if (amount.length == 0) {
        amount = 0
      }

      this.statement.amount = amount
      this.$apply()
    },
    dateChange({ detail }) {
      this.statement.date = detail.value
    },
    redirectChoseAsset () {
      wx.navigateTo({ url: `/pages/statements/chose_asset?type=${this.statement.type}` })
    },
    redirectChoseCategory () {
      wx.navigateTo({ url: `/pages/statements/chose_category?type=${this.statement.type}` })
    },
    handleAmountInput ({ detail }) {
      this.statement.amount = detail.value
    },
    handleDescInput ({ detail }) {
      this.statement.notes = detail.value
    },
    setAsset (asset) {
      this.statement.asset_id = asset.id
      this.statement.asset_name = asset.name
    },
    setCategory (category) {
      this.statement.category_id = category.id
      this.statement.record_type = category.name
    },
    chooseCategory (category) {
       let categories = {1:'购物', 2: '吃喝', 3:'买菜', 4:'交通', 5:'娱乐', 6: '其他'}
       this.statement.record_type = categories[category]
       this.statement.category_id = category
    },
    getLocation (e) {
      const locationSwitch = e.detail.value
      Session.set('getLocationSwitch', locationSwitch)
      if (locationSwitch) {
        this.setLocation()
      } else {
        // 关闭获取地理位置
        this.statement.address = ''
        this.$apply()
      }
    },
    async formSubmit ({ detail }) {
      const statement = this.statement// detail.value
      if (statement.amount == 0 || statement.amount == '') {
        tip.error('金额不能为零')
        return false
      }

      if (statement.category_id == 0) {
        tip.error('未选择分类')
        return false
      }

      // if (statement.asset_id == 0) {
      //   tip.error('未选择账户')
      //   return false
      // }
      statement['description'] = this.statement.notes
      statement['category_id'] = this.statement.category_id
      //console.log('s', statement)
      // statement.upload_files = this.statement.upload_files
      this.$emit('submit', statement, detail)
    },
    showPicture (item) {
      wx.previewImage({
        current: item,
        urls: this.statement.upload_files
      })
    },
    quickSetDate (between) {
      const today = new Date()
      let date = today
      if (between == -1) {
        date = new Date(today.getTime() - 24*60*60*1000)
      } else if (between == -2) {
        date = new Date(today.getTime() - 2*24*60*60*1000);
      }
      const year = date.getFullYear()
      let month = date.getMonth() + 1
      let day = date.getDate()
      if (month < 10) month = '0' + month
      if (day < 10) day = '0' + day
      this.statement.date = [year, month, day].join('-')
    },
    deleteImage (item) {
      const index = this.statement.upload_files.indexOf(item)
      this.statement.upload_files.splice(index, 1)
    },
    async uploadImage () {
      const choseImages = await wepy.chooseImage({
        count: 5,
        sizeType: ['compressed'],
        sourceType: ['album', 'camera']
      })
      this.statement.upload_files = [...this.statement.upload_files, ...choseImages.tempFilePaths]
      this.$apply()
    }
  }
}
</script>
<style lang="scss" src="../../public/styles/statement/statement.scss"></style>